export declare const base: import("tailwind-variants").TVReturnType<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}>, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}>, unknown, unknown, undefined>>;
export declare const caption: import("tailwind-variants").TVReturnType<{
    size: {
        xs: string;
        sm: string;
        base: string;
    };
    neutral: {
        true: string;
    };
}, undefined, "text-[--caption-text-color]", {
    responsiveVariants: ("sm" | "md" | "lg" | "xl" | "2xl")[];
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}>, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}>, unknown, unknown, undefined>>>;
export declare const text: import("tailwind-variants").TVReturnType<{
    size: {
        sm: string;
        base: string;
        lg: string;
        xl: string;
    };
    neutral: {
        true: string;
    };
}, undefined, "text-[--body-text-color]", {
    responsiveVariants: ("sm" | "md" | "lg" | "xl" | "2xl")[];
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}>, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}>, unknown, unknown, undefined>>>;
export declare const list: import("tailwind-variants").TVReturnType<{
    type: {
        disc: string;
        decimal: string;
        none: string;
    };
    inside: {
        true: string;
    };
}, undefined, "list-outside pl-4", {
    responsiveVariants: ("sm" | "md" | "lg" | "xl" | "2xl")[];
}, {
    size: {
        sm: string;
        base: string;
        lg: string;
        xl: string;
    };
    neutral: {
        true: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    size: {
        sm: string;
        base: string;
        lg: string;
        xl: string;
    };
    neutral: {
        true: string;
    };
}, undefined, "text-[--body-text-color]", {
    responsiveVariants: ("sm" | "md" | "lg" | "xl" | "2xl")[];
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}>, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}>, unknown, unknown, undefined>>>>;
export declare const link: import("tailwind-variants").TVReturnType<{
    size: {
        xs: string;
        sm: string;
        base: string;
        lg: string;
        xl: string;
    };
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        info: string;
        danger: string;
        success: string;
        warning: string;
        gray: string;
        neutral: string;
    };
    variant: {
        plain: string;
        underlined: string;
        ghost: string;
        animated: string;
    };
    visited: {
        true: string;
    };
}, undefined, "transition", {
    responsiveVariants: ("sm" | "md" | "lg" | "xl" | "2xl")[];
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}>, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}>, unknown, unknown, undefined>>>;
export declare const display: import("tailwind-variants").TVReturnType<{
    size: {
        "4xl": string;
        "5xl": string;
        "6xl": string;
        "7xl": string;
        "8xl": string;
        "9xl": string;
    };
}, undefined, "block text-[--display-text-color]", {
    responsiveVariants: ("sm" | "md" | "lg" | "xl" | "2xl")[];
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}>, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}>, unknown, unknown, undefined>>>;
export declare const title: import("tailwind-variants").TVReturnType<{
    size: {
        base: string;
        lg: string;
        xl: string;
        "2xl": string;
        "3xl": string;
    };
}, undefined, "block text-[--title-text-color]", {
    responsiveVariants: ("sm" | "md" | "lg" | "xl" | "2xl")[];
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}>, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}, {
    weight: {
        black: string;
        bold: string;
        semibold: string;
        medium: string;
        normal: string;
    };
    align: {
        left: string;
        center: string;
        right: string;
    };
}>, unknown, unknown, undefined>>>;
export declare const codeTheme: import("tailwind-variants").TVReturnType<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        gray: string;
        neutral: string;
    };
}, undefined, "text-sm inline-block border rounded-md py-px px-1", import("tailwind-variants/dist/config").TVConfig<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        gray: string;
        neutral: string;
    };
}, {
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        gray: string;
        neutral: string;
    };
}>, {
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        gray: string;
        neutral: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        gray: string;
        neutral: string;
    };
}, undefined, "text-sm inline-block border rounded-md py-px px-1", import("tailwind-variants/dist/config").TVConfig<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        gray: string;
        neutral: string;
    };
}, {
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        gray: string;
        neutral: string;
    };
}>, unknown, unknown, undefined>>;
export declare const kbdTheme: import("tailwind-variants").TVReturnType<{} | {}, undefined, "inline-flex items-center justify-center text-gray-800 dark:text-white h-5 text-[11px] min-w-5 px-1.5 rounded font-sans bg-gray-100 dark:bg-white/10 ring-1 border-b border-t border-t-white border-b-gray-200 dark:border-t-transparent dark:border-b-gray-950 ring-gray-300 dark:ring-white/15", import("tailwind-variants/dist/config").TVConfig<unknown, unknown>, unknown, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "inline-flex items-center justify-center text-gray-800 dark:text-white h-5 text-[11px] min-w-5 px-1.5 rounded font-sans bg-gray-100 dark:bg-white/10 ring-1 border-b border-t border-t-white border-b-gray-200 dark:border-t-transparent dark:border-b-gray-950 ring-gray-300 dark:ring-white/15", import("tailwind-variants/dist/config").TVConfig<unknown, unknown>, unknown, unknown, undefined>>;
export type CodeThemeProps = {
    intent?: keyof typeof codeTheme.variants.intent;
};
export type Weight = keyof typeof base.variants.weight;
export type Align = keyof typeof base.variants.align;
type BaseTextProps = {
    weight?: Weight;
    align?: Align;
};
export type CaptionProps = BaseTextProps & {
    size?: keyof typeof caption.variants.size;
    neutral?: boolean;
};
export type TextProps = BaseTextProps & {
    size?: keyof typeof text.variants.size;
    neutral?: boolean;
};
export type ListProps = BaseTextProps & {
    size?: keyof typeof text.variants.size;
    type?: keyof typeof list.variants.type;
    inside?: boolean;
    neutral?: boolean;
};
export type LinkProps = BaseTextProps & {
    size?: keyof typeof text.variants.size | keyof typeof link.variants.size;
    variant?: keyof typeof link.variants.variant;
    intent?: keyof typeof link.variants.intent;
    visited?: boolean;
};
export type TitleProps = BaseTextProps & {
    size?: keyof typeof title.variants.size;
};
export type TitleSizeProp = TitleProps["size"] | {
    initial?: TitleProps["size"];
    sm?: TitleProps["size"];
    md?: TitleProps["size"];
    lg?: TitleProps["size"];
    xl?: TitleProps["size"];
    xxl?: TitleProps["size"];
};
export type TextSizeProp = TextProps["size"] | {
    initial?: TextProps["size"];
    sm?: TextProps["size"];
    md?: TextProps["size"];
    lg?: TextProps["size"];
    xl?: TextProps["size"];
    xxl?: TextProps["size"];
};
export type DisplayProps = BaseTextProps & {
    size?: keyof typeof display.variants.size;
};
export type TextWeightProp = Weight | {
    initial?: Weight;
    sm?: Weight;
    md?: Weight;
    lg?: Weight;
    xl?: Weight;
    xxl?: Weight;
};
export type TextAlignProp = Align | {
    initial?: Align;
    sm?: Align;
    md?: Align;
    lg?: Align;
    xl?: Align;
    xxl?: Align;
};
export {};
