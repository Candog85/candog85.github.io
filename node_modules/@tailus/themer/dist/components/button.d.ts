export type ButtonProps = {
    variant?: keyof typeof button | undefined;
    intent?: keyof typeof solid.variants.intent;
    size?: keyof typeof baseButton.variants.size;
};
export type ButtonIconProps = {
    type?: keyof typeof icon.variants.type;
    size?: keyof typeof icon.variants.size;
};
declare const baseButton: import("tailwind-variants").TVReturnType<{
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}, undefined, "group flex justify-center gap-1.5 items-center rounded-[--btn-radius] outline-2 outline-offset-2 focus-visible:outline outline-primary-600 disabled:bg-gray-200 disabled:text-gray-400 disabled:shadow-none disabled:hover:brightness-100 dark:disabled:bg-gray-500/10 dark:disabled:[background-image:none] dark:disabled:text-gray-700 dark:disabled:shadow-none dark:disabled:border-none", import("tailwind-variants/dist/config").TVConfig<{
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}, {
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}>, {
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}, undefined, "group flex justify-center gap-1.5 items-center rounded-[--btn-radius] outline-2 outline-offset-2 focus-visible:outline outline-primary-600 disabled:bg-gray-200 disabled:text-gray-400 disabled:shadow-none disabled:hover:brightness-100 dark:disabled:bg-gray-500/10 dark:disabled:[background-image:none] dark:disabled:text-gray-700 dark:disabled:shadow-none dark:disabled:border-none", import("tailwind-variants/dist/config").TVConfig<{
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}, {
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}>, unknown, unknown, undefined>>;
declare const solid: import("tailwind-variants").TVReturnType<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        info: string;
        success: string;
        warning: string;
        gray: string;
        neutral: string;
    };
}, undefined, "bg-gradient-to-b [box-shadow:rgba(255,255,255,0.25)_0px_1px_0px_0px_inset,var(--btn-border-color)_0px_0px_0px_1px] text-white hover:brightness-[1.1] transition-[filter] duration-150 ease-in-out active:brightness-95 dark:shadow-inner dark:to-0% dark:border-t dark:shadow-white/10 disabled:from-gray-100 disabled:to-gray-100", import("tailwind-variants/dist/config").TVConfig<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        info: string;
        success: string;
        warning: string;
        gray: string;
        neutral: string;
    };
}, {
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}>, {
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}, undefined, "group flex justify-center gap-1.5 items-center rounded-[--btn-radius] outline-2 outline-offset-2 focus-visible:outline outline-primary-600 disabled:bg-gray-200 disabled:text-gray-400 disabled:shadow-none disabled:hover:brightness-100 dark:disabled:bg-gray-500/10 dark:disabled:[background-image:none] dark:disabled:text-gray-700 dark:disabled:shadow-none dark:disabled:border-none", import("tailwind-variants/dist/config").TVConfig<{
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}, {
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}>, {
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}, undefined, "group flex justify-center gap-1.5 items-center rounded-[--btn-radius] outline-2 outline-offset-2 focus-visible:outline outline-primary-600 disabled:bg-gray-200 disabled:text-gray-400 disabled:shadow-none disabled:hover:brightness-100 dark:disabled:bg-gray-500/10 dark:disabled:[background-image:none] dark:disabled:text-gray-700 dark:disabled:shadow-none dark:disabled:border-none", import("tailwind-variants/dist/config").TVConfig<{
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}, {
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    iconOnlyButtonSize: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    defaultVariants: {
        intent: string;
        size: string;
    };
}>, unknown, unknown, undefined>>>;
export declare const icon: import("tailwind-variants").TVReturnType<{
    type: {
        leading: string;
        trailing: string;
        only: string;
    };
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    type: {
        leading: string;
        trailing: string;
        only: string;
    };
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
}, {
    type: {
        leading: string;
        trailing: string;
        only: string;
    };
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
}>, {
    type: {
        leading: string;
        trailing: string;
        only: string;
    };
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    type: {
        leading: string;
        trailing: string;
        only: string;
    };
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    type: {
        leading: string;
        trailing: string;
        only: string;
    };
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
}, {
    type: {
        leading: string;
        trailing: string;
        only: string;
    };
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
}>, unknown, unknown, undefined>>;
export declare const button: {
    solid: import("tailwind-variants").TVReturnType<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            info: string;
            success: string;
            warning: string;
            gray: string;
            neutral: string;
        };
    }, undefined, "bg-gradient-to-b [box-shadow:rgba(255,255,255,0.25)_0px_1px_0px_0px_inset,var(--btn-border-color)_0px_0px_0px_1px] text-white hover:brightness-[1.1] transition-[filter] duration-150 ease-in-out active:brightness-95 dark:shadow-inner dark:to-0% dark:border-t dark:shadow-white/10 disabled:from-gray-100 disabled:to-gray-100", import("tailwind-variants/dist/config").TVConfig<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            info: string;
            success: string;
            warning: string;
            gray: string;
            neutral: string;
        };
    }, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }>, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, import("tailwind-variants").TVReturnType<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, "group flex justify-center gap-1.5 items-center rounded-[--btn-radius] outline-2 outline-offset-2 focus-visible:outline outline-primary-600 disabled:bg-gray-200 disabled:text-gray-400 disabled:shadow-none disabled:hover:brightness-100 dark:disabled:bg-gray-500/10 dark:disabled:[background-image:none] dark:disabled:text-gray-700 dark:disabled:shadow-none dark:disabled:border-none", import("tailwind-variants/dist/config").TVConfig<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }>, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, import("tailwind-variants").TVReturnType<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, "group flex justify-center gap-1.5 items-center rounded-[--btn-radius] outline-2 outline-offset-2 focus-visible:outline outline-primary-600 disabled:bg-gray-200 disabled:text-gray-400 disabled:shadow-none disabled:hover:brightness-100 dark:disabled:bg-gray-500/10 dark:disabled:[background-image:none] dark:disabled:text-gray-700 dark:disabled:shadow-none dark:disabled:border-none", import("tailwind-variants/dist/config").TVConfig<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }>, unknown, unknown, undefined>>>;
    outlined: import("tailwind-variants").TVReturnType<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            info: string;
            success: string;
            warning: string;
            gray: string;
            neutral: string;
        };
    }, undefined, "[--outline-radial-opacity:0.6] dark:[background-image:none] [--inner-border-color:1] dark:[--inner-border-color:0] dark:[--outline-radial-opacity:0.2] [background-image:radial-gradient(76%_151%_at_52%_-52%,rgba(255,255,255,var(--outline-radial-opacity))_0%,transparent_100%)] [box-shadow:rgba(255,255,255,var(--inner-border-color))_0px_1px_0px_0px_inset,var(--btn-border-color)_0px_0px_0px_1px,0px_1px_2px_rgba(0,0,0,0.1)] hover:brightness-[0.98] active:brightness-100 transtion-[filter] ease-in-out duration-150", import("tailwind-variants/dist/config").TVConfig<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            info: string;
            success: string;
            warning: string;
            gray: string;
            neutral: string;
        };
    }, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }>, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, import("tailwind-variants").TVReturnType<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, "group flex justify-center gap-1.5 items-center rounded-[--btn-radius] outline-2 outline-offset-2 focus-visible:outline outline-primary-600 disabled:bg-gray-200 disabled:text-gray-400 disabled:shadow-none disabled:hover:brightness-100 dark:disabled:bg-gray-500/10 dark:disabled:[background-image:none] dark:disabled:text-gray-700 dark:disabled:shadow-none dark:disabled:border-none", import("tailwind-variants/dist/config").TVConfig<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }>, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, import("tailwind-variants").TVReturnType<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, "group flex justify-center gap-1.5 items-center rounded-[--btn-radius] outline-2 outline-offset-2 focus-visible:outline outline-primary-600 disabled:bg-gray-200 disabled:text-gray-400 disabled:shadow-none disabled:hover:brightness-100 dark:disabled:bg-gray-500/10 dark:disabled:[background-image:none] dark:disabled:text-gray-700 dark:disabled:shadow-none dark:disabled:border-none", import("tailwind-variants/dist/config").TVConfig<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }>, unknown, unknown, undefined>>>;
    soft: import("tailwind-variants").TVReturnType<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            info: string;
            success: string;
            warning: string;
            gray: string;
            neutral: string;
        };
    }, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            info: string;
            success: string;
            warning: string;
            gray: string;
            neutral: string;
        };
    }, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }>, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, import("tailwind-variants").TVReturnType<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, "group flex justify-center gap-1.5 items-center rounded-[--btn-radius] outline-2 outline-offset-2 focus-visible:outline outline-primary-600 disabled:bg-gray-200 disabled:text-gray-400 disabled:shadow-none disabled:hover:brightness-100 dark:disabled:bg-gray-500/10 dark:disabled:[background-image:none] dark:disabled:text-gray-700 dark:disabled:shadow-none dark:disabled:border-none", import("tailwind-variants/dist/config").TVConfig<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }>, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, import("tailwind-variants").TVReturnType<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, "group flex justify-center gap-1.5 items-center rounded-[--btn-radius] outline-2 outline-offset-2 focus-visible:outline outline-primary-600 disabled:bg-gray-200 disabled:text-gray-400 disabled:shadow-none disabled:hover:brightness-100 dark:disabled:bg-gray-500/10 dark:disabled:[background-image:none] dark:disabled:text-gray-700 dark:disabled:shadow-none dark:disabled:border-none", import("tailwind-variants/dist/config").TVConfig<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }>, unknown, unknown, undefined>>>;
    ghost: import("tailwind-variants").TVReturnType<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            info: string;
            success: string;
            warning: string;
            gray: string;
            neutral: string;
        };
    }, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            info: string;
            success: string;
            warning: string;
            gray: string;
            neutral: string;
        };
    }, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }>, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, import("tailwind-variants").TVReturnType<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, "group flex justify-center gap-1.5 items-center rounded-[--btn-radius] outline-2 outline-offset-2 focus-visible:outline outline-primary-600 disabled:bg-gray-200 disabled:text-gray-400 disabled:shadow-none disabled:hover:brightness-100 dark:disabled:bg-gray-500/10 dark:disabled:[background-image:none] dark:disabled:text-gray-700 dark:disabled:shadow-none dark:disabled:border-none", import("tailwind-variants/dist/config").TVConfig<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }>, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, import("tailwind-variants").TVReturnType<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, undefined, "group flex justify-center gap-1.5 items-center rounded-[--btn-radius] outline-2 outline-offset-2 focus-visible:outline outline-primary-600 disabled:bg-gray-200 disabled:text-gray-400 disabled:shadow-none disabled:hover:brightness-100 dark:disabled:bg-gray-500/10 dark:disabled:[background-image:none] dark:disabled:text-gray-700 dark:disabled:shadow-none dark:disabled:border-none", import("tailwind-variants/dist/config").TVConfig<{
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }, {
        size: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        iconOnlyButtonSize: {
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        defaultVariants: {
            intent: string;
            size: string;
        };
    }>, unknown, unknown, undefined>>>;
};
export {};
