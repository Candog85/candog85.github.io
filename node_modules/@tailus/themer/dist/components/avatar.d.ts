export declare const image: import("tailwind-variants").TVReturnType<{} | {}, undefined, "size-full object-full rounded-[--avatar-radius]", import("tailwind-variants/dist/config").TVConfig<unknown, unknown>, unknown, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "size-full object-full rounded-[--avatar-radius]", import("tailwind-variants/dist/config").TVConfig<unknown, unknown>, unknown, unknown, undefined>>;
export declare const avatar: import("tailwind-variants").TVReturnType<{
    size: {
        xxs: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
        "3xl": string;
    };
    status: {
        online: string;
        offline: string;
        away: string;
        busy: string;
    };
    topStatus: {
        true: string;
    };
    bottomStatus: {
        true: string;
    };
}, undefined, "block relative rounded-[--avatar-radius]", import("tailwind-variants/dist/config").TVConfig<{
    size: {
        xxs: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
        "3xl": string;
    };
    status: {
        online: string;
        offline: string;
        away: string;
        busy: string;
    };
    topStatus: {
        true: string;
    };
    bottomStatus: {
        true: string;
    };
}, {
    size: {
        xxs: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
        "3xl": string;
    };
    status: {
        online: string;
        offline: string;
        away: string;
        busy: string;
    };
    topStatus: {
        true: string;
    };
    bottomStatus: {
        true: string;
    };
}>, {
    size: {
        xxs: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
        "3xl": string;
    };
    status: {
        online: string;
        offline: string;
        away: string;
        busy: string;
    };
    topStatus: {
        true: string;
    };
    bottomStatus: {
        true: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    size: {
        xxs: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
        "3xl": string;
    };
    status: {
        online: string;
        offline: string;
        away: string;
        busy: string;
    };
    topStatus: {
        true: string;
    };
    bottomStatus: {
        true: string;
    };
}, undefined, "block relative rounded-[--avatar-radius]", import("tailwind-variants/dist/config").TVConfig<{
    size: {
        xxs: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
        "3xl": string;
    };
    status: {
        online: string;
        offline: string;
        away: string;
        busy: string;
    };
    topStatus: {
        true: string;
    };
    bottomStatus: {
        true: string;
    };
}, {
    size: {
        xxs: string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
        "3xl": string;
    };
    status: {
        online: string;
        offline: string;
        away: string;
        busy: string;
    };
    topStatus: {
        true: string;
    };
    bottomStatus: {
        true: string;
    };
}>, unknown, unknown, undefined>>;
export declare const solid: import("tailwind-variants").TVReturnType<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}, undefined, "absolute inset-0 m-auto flex items-center justify-center rounded-[--avatar-radius] font-medium text-white", import("tailwind-variants/dist/config").TVConfig<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}, {
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}>, {
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}, undefined, "absolute inset-0 m-auto flex items-center justify-center rounded-[--avatar-radius] font-medium text-white", import("tailwind-variants/dist/config").TVConfig<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}, {
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}>, unknown, unknown, undefined>>;
export declare const soft: import("tailwind-variants").TVReturnType<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}, {
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}>, {
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}, undefined, "absolute inset-0 m-auto flex items-center justify-center rounded-[--avatar-radius] font-medium text-white", import("tailwind-variants/dist/config").TVConfig<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}, {
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}>, {
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}, undefined, "absolute inset-0 m-auto flex items-center justify-center rounded-[--avatar-radius] font-medium text-white", import("tailwind-variants/dist/config").TVConfig<{
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}, {
    intent: {
        primary: string;
        secondary: string;
        accent: string;
        danger: string;
        success: string;
        warning: string;
        info: string;
        gray: string;
    };
}>, unknown, unknown, undefined>>>;
export declare const fallback: {
    solid: import("tailwind-variants").TVReturnType<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }, undefined, "absolute inset-0 m-auto flex items-center justify-center rounded-[--avatar-radius] font-medium text-white", import("tailwind-variants/dist/config").TVConfig<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }, {
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }>, {
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }, undefined, import("tailwind-variants").TVReturnType<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }, undefined, "absolute inset-0 m-auto flex items-center justify-center rounded-[--avatar-radius] font-medium text-white", import("tailwind-variants/dist/config").TVConfig<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }, {
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }>, unknown, unknown, undefined>>;
    soft: import("tailwind-variants").TVReturnType<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }, undefined, undefined, import("tailwind-variants/dist/config").TVConfig<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }, {
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }>, {
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }, undefined, import("tailwind-variants").TVReturnType<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }, undefined, "absolute inset-0 m-auto flex items-center justify-center rounded-[--avatar-radius] font-medium text-white", import("tailwind-variants/dist/config").TVConfig<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }, {
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }>, {
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }, undefined, import("tailwind-variants").TVReturnType<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }, undefined, "absolute inset-0 m-auto flex items-center justify-center rounded-[--avatar-radius] font-medium text-white", import("tailwind-variants/dist/config").TVConfig<{
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }, {
        intent: {
            primary: string;
            secondary: string;
            accent: string;
            danger: string;
            success: string;
            warning: string;
            info: string;
            gray: string;
        };
    }>, unknown, unknown, undefined>>>;
};
export type AvatarRootProps = {
    size?: keyof typeof avatar.variants.size;
    status?: keyof typeof avatar.variants.status;
    topStatus?: boolean;
    bottomStatus?: boolean;
};
export type AvatarFallbackProps = {
    variant?: keyof typeof fallback;
    intent?: keyof typeof solid.variants.intent;
};
