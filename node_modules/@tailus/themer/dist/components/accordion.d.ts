export declare const fancyBorder = "border dark:border-gray-950 !outline !outline-1 -outline-offset-2 !outline-white/5 dark:!outline-[--ui-border-color]";
export declare const accordion: import("tailwind-variants").TVReturnType<{
    variant: {
        default: {
            item: string;
        };
        elevated: {
            item: string;
        };
        ghost: {
            item: string;
        };
        soft: {
            root: string;
            item: string;
        };
        mixed: {
            root: string;
            item: string;
        };
        outlined: {
            root: string;
            item: string;
        };
    };
    fancy: {
        true: string;
    };
}, {
    root: string;
    item: string;
    header: string;
    trigger: string;
    triggerIcon: string;
    triggerContent: string;
    content: string;
}, undefined, import("tailwind-variants/dist/config").TVConfig<{
    variant: {
        default: {
            item: string;
        };
        elevated: {
            item: string;
        };
        ghost: {
            item: string;
        };
        soft: {
            root: string;
            item: string;
        };
        mixed: {
            root: string;
            item: string;
        };
        outlined: {
            root: string;
            item: string;
        };
    };
    fancy: {
        true: string;
    };
}, {
    variant: {
        default: {
            item: string;
        };
        elevated: {
            item: string;
        };
        ghost: {
            item: string;
        };
        soft: {
            root: string;
            item: string;
        };
        mixed: {
            root: string;
            item: string;
        };
        outlined: {
            root: string;
            item: string;
        };
    };
    fancy: {
        true: string;
    };
}>, {
    variant: {
        default: {
            item: string;
        };
        elevated: {
            item: string;
        };
        ghost: {
            item: string;
        };
        soft: {
            root: string;
            item: string;
        };
        mixed: {
            root: string;
            item: string;
        };
        outlined: {
            root: string;
            item: string;
        };
    };
    fancy: {
        true: string;
    };
}, {
    root: string;
    item: string;
    header: string;
    trigger: string;
    triggerIcon: string;
    triggerContent: string;
    content: string;
}, import("tailwind-variants").TVReturnType<{
    variant: {
        default: {
            item: string;
        };
        elevated: {
            item: string;
        };
        ghost: {
            item: string;
        };
        soft: {
            root: string;
            item: string;
        };
        mixed: {
            root: string;
            item: string;
        };
        outlined: {
            root: string;
            item: string;
        };
    };
    fancy: {
        true: string;
    };
}, {
    root: string;
    item: string;
    header: string;
    trigger: string;
    triggerIcon: string;
    triggerContent: string;
    content: string;
}, undefined, import("tailwind-variants/dist/config").TVConfig<{
    variant: {
        default: {
            item: string;
        };
        elevated: {
            item: string;
        };
        ghost: {
            item: string;
        };
        soft: {
            root: string;
            item: string;
        };
        mixed: {
            root: string;
            item: string;
        };
        outlined: {
            root: string;
            item: string;
        };
    };
    fancy: {
        true: string;
    };
}, {
    variant: {
        default: {
            item: string;
        };
        elevated: {
            item: string;
        };
        ghost: {
            item: string;
        };
        soft: {
            root: string;
            item: string;
        };
        mixed: {
            root: string;
            item: string;
        };
        outlined: {
            root: string;
            item: string;
        };
    };
    fancy: {
        true: string;
    };
}>, unknown, unknown, undefined>>;
export type AccordionProps = {
    variant?: keyof typeof accordion.variants.variant;
    fancy?: boolean;
};
